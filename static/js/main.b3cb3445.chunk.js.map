{"version":3,"sources":["components/SingleCard.js","components/LostModal.js","components/WinModal.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","LostModal","shuffleCards","WinModal","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","lostModal","setLostModal","winModal","setWinModal","showButton","setShowButton","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","winner","filter","length","confetti","particleCount","spread","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3cb3445.chunk.js","sourcesContent":["import './SingleCard.css'\n\n\nexport default function SingleCard( {card, handleChoice, flipped, disabled}){\n\nconst handleClick = () => {\n  if(!disabled) {\n    handleChoice(card)\n  }\n}\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card front\" />\n        <img className=\"back\"\n          src=\"/img/card-background.png\" \n          onClick={handleClick} \n          alt=\"card-back\" />\n      </div>\n    </div>\n  )\n}","import './Modal.css'\n\nexport default function LostModal( {shuffleCards}) {\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal\">\n        <h3>Sorry!</h3>\n        <p>You flipped a few too many cards,</p>\n        <p>a few too many times...</p>\n        <p></p>\n        <button className=\"play-again\" onClick={shuffleCards}>Play Again</button>\n      </div>\n    </div>\n  )\n}\n","import './Modal.css'\n\n\n\n\nexport default function WinModal( {shuffleCards}) {\n\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal\">\n        <h1>You Win!</h1> \n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport SingleCard from './components/SingleCard'\nimport LostModal from './components/LostModal'\nimport WinModal from './components/WinModal'\nimport confetti from 'canvas-confetti'\nimport './App.css'\n\n\nconst cardImages = [\n  { \"src\": \"/img/lou-in-snow.png\", matched: false },\n  { \"src\": \"/img/jo-in-snow.png\", matched: false },\n  { \"src\": \"/img/lou-sunglasses.png\", matched: false },\n  { \"src\": \"/img/rain-boots.png\", matched: false }, \n  { \"src\": \"/img/jojo-goggles.png\", matched: false },\n  { \"src\": \"/img/beach-babies.png\", matched: false }\n]\n\n\nfunction App() {\nconst [ cards, setCards ] = useState([])\nconst [ turns, setTurns ] = useState(12)\nconst [ choiceOne, setChoiceOne ] = useState(null)\nconst [ choiceTwo, setChoiceTwo ] = useState(null)\nconst [ disabled, setDisabled ] = useState(false)\nconst [ lostModal, setLostModal ] = useState(false)\nconst [ winModal, setWinModal ] = useState(false)\nconst [ showButton, setShowButton ] = useState(true)\n\n\n  //shuffle cards for new game\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(()=> Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }))\n\n    setShowButton(true)\n    setCards(shuffledCards)\n    setTurns(12)\n    setLostModal(false)\n    setWinModal(false)\n  }\n\n  //handle picking cards\nconst handleChoice =(card)=>{\n  choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n}\n\n\n//compare 2 selected cards\nuseEffect(() => {\n\n  if(choiceOne && choiceTwo) {\n    setDisabled(true)\n    if(choiceOne.src === choiceTwo.src) {\n      setCards(prevCards => {\n        return prevCards.map(card => {\n          if(card.src === choiceOne.src) {\n            return { ...card, matched: true }\n          } else {\n            return card\n          }\n        })\n      })\n      resetTurn();\n      } else {\n      setTimeout(()=>resetTurn(),1000)\n  }\n}\n}, [choiceOne, choiceTwo])\n\nconst winner = cards.filter(card => card.matched === true).length\n\n\nuseEffect(() => {\n  if(turns === 0) {\n    setLostModal(true)\n    setCards([])\n    setShowButton(false)\n  } else if(winner === 12) {\n      setWinModal(true)\n      // setCards([])\n      setShowButton(false)\n      setTimeout(()=>{confetti({\n        particleCount: 200,\n        spread: 180,\n      })}, 1000)\n      setTimeout(()=>setWinModal(false),3500)\n      setTimeout(()=>setShowButton(true),4500)\n    } else {\n    }\n}, [turns, winner])\n\n\nconst resetTurn = () => {\n  setChoiceOne(null)\n  setChoiceTwo(null)\n  setTurns(prevTurns => prevTurns - 1)\n  setDisabled(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Match</h1>\n          <p>You have twelve turns to make a match.</p>\n\n      {showButton && (\n        <button onClick={shuffleCards}>New Game</button>\n      )}\n\n      {lostModal && (\n      <LostModal shuffleCards={shuffleCards} />\n      )}\n\n      {winModal && (\n        <WinModal shuffleCards={shuffleCards} className=\"card-grid\" /> \n      )}\n\n      {!winModal && (\n        <div className=\"card-grid\">\n        {cards.map(card=> (\n          <SingleCard \n          key={card.id}\n          card={card}\n          handleChoice={handleChoice} \n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          /> \n        ))}\n      </div>)}\n      <p>Turns Left: {turns}</p>\n    </div>\n  );\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}